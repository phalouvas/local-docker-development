version: '3.6'

services:
    traefik:
      image: traefik:latest
      restart: always
      ports:
        - 80:80
        - 443:443
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
        - ./traefik/traefik.toml:/traefik.toml
        - ./traefik/acme.json:/acme.json
        - ./logs:/logs
      container_name: traefik
      restart: always

    nginx:
      build:
          context: ./include/nginx_local
      container_name: nginx
      hostname: nginx
      volumes:
          - ../code_smsto/:/code_smsto/:rw
          - ../code_emailverifier/:/code_emailverifier/:rw
          - ../code_emailvalidation/:/code_emailvalidation/:rw
          - ./include/nginx_local/conf.d:/etc/nginx/conf.d/:ro
      depends_on:
          - php-fpm
      labels:
          - "traefik.enable=true"
          - "traefik.frontend.rule=HostRegexp:{catchall:.*}"
          - "traefik.frontend.priority=1"
          - "traefik.backend=nginx"
          - "traefik.port=80"    
      restart: always

    smsto.redis:
      image: redis:alpine
      container_name: smsto.redis
      hostname: smsto.redis
      restart: always

    emailverifier.redis:
      image: redis:alpine
      container_name: emailverifier.redis
      hostname: emailverifier.redis
      restart: always

    phpredisadmin:
      container_name: phpredisadmin
      hostname: phpredisadmin
      image: erikdubbelboer/phpredisadmin
      restart: always
      environment:
          - REDIS_1_HOST=smsto.redis
          - REDIS_1_NAME=smsto.redis
          - REDIS_2_HOST=emailverifier.redis
          - REDIS_2_NAME=emailverifier.redis
#      depends_on:
#          - redis

    mariadb:
      image: mariadb:10.2
      container_name: mariadb
      hostname: mariadb
      volumes:
        - ./backup:/backup
      ports:
        - 3307:3306
      environment:
        - MYSQL_ROOT_PASSWORD=root

    mongo:
      image: mongo:3.6
      command: --smallfiles
      container_name: mongo
      hostname: mongo
      restart: always
      #ports:
      #  - 27017:27017
      #environment:
      #  - MONGO_INITDB_ROOT_USERNAME: root
      #  - MONGO_INITDB_ROOT_PASSWORD: example

    mongo-express:
      image: mongo-express
      container_name: mongo-express
      hostname: mongo-express
      depends_on:
          - mongo
      restart: always

    php-fpm:
      build:
        context: ./include/php-fpm
      container_name: smsto-php-fpm
      hostname: php-fpm
      # xdebug idekey "PHPSTORM"
      # xdebug port 9001
      volumes:
        # TimeFix
        - /etc/localtime:/etc/localtime:ro
        # GeoIP
        - ./docker_files/db_geoip/:/application/storage/app/geoip2/
        # CRON
        - ./docker_files/cron/php-fpm_laravel_schedule:/etc/cron.d/cron
        - .:/application/:rw

    php-fpm-horizon:
      build:
        context: ./include/php-fpm-horizon
      container_name: php-fpm-horizon
      hostname: php-fpm-horizon
      volumes:
        - .:/application/:rw

    phpmyadmin:
      image: phpmyadmin/phpmyadmin
      container_name: phpmyadmin
      hostname: phpmyadmin
      environment:
        #- PMA_ARBITRARY=1
        - PMA_USER=root
        - PMA_PASSWORD=root
        - PMA_HOST=mariadb
      restart: always
#      ports:
#        - 8080:80
      volumes:
        - /sessions


    wsecho:
      image: registry.intergo.co/wsecho:latest
      #build: ./include/laravel-echo-server
      container_name: smsto-wsecho
      hostname: wsecho
      restart: always
      ports:
        - 6001:6001
      volumes:
         # Config moved inside image
         - ./docker_files/laravel-echo-server.json:/app/laravel-echo-server.json

    mailhog:
      image: mailhog/mailhog:latest
      container_name: smsto-mailhog
      restart: always

#    geoip:
#      image: registry.intergo.co/geoip:latest
#      #build:
#      #  context: ./include/geoip
#      container_name: geoip
#      hostname: geoip
#      restart: always
#      volumes:
#         - ./docker_files/db_geoip/:/usr/share/GeoIP/

    node-vuejs:
      image: node:8
      #build:
      #  context: ./include/node-vuejs
      container_name: node-vuejs
      hostname: node-vuejs
      working_dir: /app
      volumes:
        - .:/app

networks:
  default:
    name: intergo-local-net
    driver: bridge

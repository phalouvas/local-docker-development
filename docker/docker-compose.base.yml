version: '3.6'

services:
    traefik:
      image: traefik:1.7.12
      restart: always
      ports:
        - ${COMPOSE_PORT_HTTP}:80
        - ${COMPOSE_PORT_HTTPS}:443
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
        - ./traefik/traefik.toml:/traefik.toml
        - ./traefik/ssl/:/ssl/
        - ./logs:/logs
      container_name: traefik
      labels:
          - "traefik.enable=true"
          - "traefik.frontend.rule=Host:traefik.${COMPOSE_BASE_DOMAIN}"
          - "traefik.backend=traefik"
          - "traefik.port=8080"    
      restart: unless-stopped

    nginx:
      image: nginx:alpine
      container_name: nginx
      hostname: nginx
      volumes:
          - ../code_smsto/:/code_smsto/:rw
          - ../code_emailverifier/:/code_emailverifier/:rw
          - ../code_emailvalidation/:/code_emailvalidation/:rw
          - ../code_msas/:/code_msas/:rw
          - ../code_msms/:/code_msms/:rw
          - ./include/nginx_local/conf.d/:/etc/nginx/conf.d/:ro
      depends_on:
          - php-fpm
      networks:
        default:
          aliases:
            - nginx-smsto-api
            - nginx-msms
            - nginx-msas
      labels:
          - "traefik.enable=true"
          - "traefik.frontend.rule=HostRegexp:{catchall:.*}"
          - "traefik.frontend.priority=1"
          - "traefik.backend=nginx"
          - "traefik.port=80"    
      restart: unless-stopped

    smsto-redis:
      image: redis:alpine
      container_name: smsto-redis
      hostname: smsto-redis
      restart: unless-stopped
      
    msms-redis:
      image: redis:alpine
      container_name: msms-redis
      hostname: msms-redis
      restart: unless-stopped
      
    msas-redis:
      image: redis:alpine
      container_name: msas-redis
      hostname: msas-redis
      restart: unless-stopped
      
    emailverifier-redis:
      image: redis:alpine
      container_name: emailverifier-redis
      hostname: emailverifier-redis
      restart: unless-stopped

    phpredisadmin:
      container_name: phpredisadmin
      hostname: phpredisadmin
      image: erikdubbelboer/phpredisadmin
      restart: unless-stopped
      environment:
          - REDIS_1_HOST=smsto-redis
          - REDIS_1_NAME=smsto-redis
          - REDIS_2_HOST=msms-redis
          - REDIS_2_NAME=msms-redis
          - REDIS_3_HOST=msas-redis
          - REDIS_3_NAME=msas-redis
          - REDIS_4_HOST=emailverifier-redis
          - REDIS_4_NAME=emailverifier-redis
      labels:
          - "traefik.enable=true"
          - "traefik.frontend.rule=Host:redis-web.${COMPOSE_BASE_DOMAIN}"
          - "traefik.backend=redis-web"
          - "traefik.port=80"

    mariadb:
      image: mariadb:10.2
      container_name: mariadb
      hostname: mariadb
      volumes:
        - ./backup:/backup
      ports:
        - ${COMPOSE_PORT_MYSQL}:3306
      environment:
        - MYSQL_ROOT_PASSWORD=root

    mongo:
      image: mongo:3.6
      command: --smallfiles
      container_name: mongo
      hostname: mongo
      restart: unless-stopped
      ports:
        - ${COMPOSE_PORT_MONGO}:27017
      #environment:
      #  - MONGO_INITDB_ROOT_USERNAME: root
      #  - MONGO_INITDB_ROOT_PASSWORD: example

    mongo-express:
      image: mongo-express
      container_name: mongo-express
      hostname: mongo-express
      depends_on:
          - mongo
      restart: unless-stopped
      labels:
          - "traefik.enable=true"
          - "traefik.frontend.rule=Host:mongo-express.${COMPOSE_BASE_DOMAIN}"
          - "traefik.backend=mongo-express"
          - "traefik.port=8081"

    php-fpm:
      build:
        context: ./include/php-fpm
      container_name: php-fpm
      hostname: php-fpm
      # xdebug idekey "PHPSTORM"
      # xdebug port 9001
      volumes:
        # TimeFix
        #- /etc/localtime:/etc/localtime:ro
        # GeoIP
        #- ./docker_files/db_geoip/:/application/storage/app/geoip2/
        # CRON
        #- ./docker_files/cron/php-fpm_laravel_schedule:/etc/cron.d/cron
        - ../code_smsto/:/code_smsto/:rw
        - ../code_emailverifier/:/code_emailverifier/:rw
        - ../code_emailvalidation/:/code_emailvalidation/:rw
        - ../code_msas/:/code_msas/:rw
        - ../code_msms/:/code_msms/:rw

    php-fpm-horizon:
      build:
        context: ./include/php-fpm-horizon
      container_name: php-fpm-horizon
      hostname: php-fpm-horizon
      volumes:
        - ../code_smsto/:/code_smsto/:rw
        - ../code_msms/:/code_msms/:rw
        - ../code_emailverifier/:/code_emailverifier/:rw
        - ../code_emailvalidation/:/code_emailvalidation/:rw
      labels:
        - "traefik.enable=true"
        - "traefik.frontend.rule=Host:supervisor.${COMPOSE_BASE_DOMAIN}"
        - "traefik.backend=horizon-supervisor"
        - "traefik.port=8001"

    phpmyadmin:
      image: phpmyadmin/phpmyadmin
      container_name: phpmyadmin
      hostname: phpmyadmin
      environment:
        #- PMA_ARBITRARY=1
        - PMA_USER=root
        - PMA_PASSWORD=root
        - PMA_HOST=mariadb
      restart: unless-stopped
      depends_on:
        - mariadb
#      ports:
#        - 8080:80
      volumes:
        - /sessions
      labels:
          - "traefik.enable=true"
          - "traefik.frontend.rule=Host:phpmyadmin.${COMPOSE_BASE_DOMAIN}"
          - "traefik.backend=phpmyadmin"
          - "traefik.port=80"

    mailhog:
      image: mailhog/mailhog:latest
      container_name: mailhog
      restart: unless-stopped
      labels:
          - "traefik.enable=true"
          - "traefik.frontend.rule=Host:mailhog.${COMPOSE_BASE_DOMAIN}"
          - "traefik.backend=mailhog"
          - "traefik.port=8025"

    nodejs:
      image: node:9-alpine
      #build:
      #  context: ./include/vuejs-watch
      container_name: nodejs
      hostname: nodejs
      working_dir: /application
      volumes:
          - ../code_smsto/:/code_smsto/:rw
          - ../code_emailverifier/:/code_emailverifier/:rw
          - ../code_msas/:/code_msas/:rw
          - ../code_msms/:/code_msms/:rw
      #restart: unless-stopped
      command: echo "Container ready."


#    geoip:
#      image: registry.intergo.co/geoip:latest
#      #build:
#      #  context: ./include/geoip
#      container_name: geoip
#      hostname: geoip
#      restart: unless-stopped
#      volumes:
#         - ./docker_files/db_geoip/:/usr/share/GeoIP/
#

networks:
  default:
    name: intergo-local-net
    driver: bridge
